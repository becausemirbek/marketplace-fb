{"version":3,"sources":["pages/EditPage/index.js","redux/actions.js"],"names":["PostForm","props","handleFileDrop","e","pass_images","state","target","files","setState","deleteFile","i","splice","handleValidSubmit","event","values","formData","FormData","key","forEach","item","append","category","id","updatePost","data","match","params","getLoggedInUser","bind","console","log","this","getAdsDetails","convertCatToOpt","map","label","title","value","children","className","onValidSubmit","for","name","type","color","onClick","ads","deletePost","history","push","Component","connect","Category","loading","error"],"mappings":"mSAiBMA,G,yDAKJ,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAYRC,eAAiB,SAACC,GAChB,IAAMC,EAAW,sBAAO,EAAKC,MAAMD,aAAlB,YAAkCD,EAAEG,OAAOC,QAC5D,EAAKC,SAAS,CAAEJ,iBAfC,EAkBnBK,WAAa,SAACC,GACZ,IAAMN,EAAW,YAAO,EAAKC,MAAMD,aACnCA,EAAYO,OAAOD,EAAG,GACtB,EAAKF,SAAS,CAAEJ,iBArBC,EA8BnBQ,kBAAoB,SAACC,EAAOC,UACnBA,EAAOV,YACd,IAAIW,EAAW,IAAIC,SAInB,IAAK,IAAMC,KAHX,EAAKZ,MAAMD,YAAYc,SAAQ,SAACC,GAC9BJ,EAASK,OAAO,SAAUD,MAEVL,EAChBC,EAASK,OAAOH,EAAKH,EAAOG,IAE1B,EAAKZ,MAAMgB,UACbN,EAASK,OAAO,WAAY,EAAKf,MAAMgB,SAASC,IAClD,EAAKrB,MAAMsB,WAAW,CAAEC,KAAMT,EAAUO,GAAI,EAAKrB,MAAMwB,MAAMC,OAAOJ,MAvCvDK,cAFI,OAIjB,EAAKf,kBAAoB,EAAKA,kBAAkBgB,KAAvB,gBACzB,EAAK1B,eAAiB,EAAKA,eAAe0B,KAApB,gBACtB,EAAKnB,WAAa,EAAKA,WAAWmB,KAAhB,gBAClB,EAAKvB,MAAQ,CACXD,YAAa,GACbiB,SAAU,MATK,E,gEAHjBQ,QAAQC,IAAIC,KAAK9B,OACjB8B,KAAK9B,MAAM+B,cAAcD,KAAK9B,MAAMwB,MAAMC,OAAOJ,Q,8CA8CzC,IAAD,QACiB,SAAlBW,EAAmBT,GAAD,OACtBA,EAAKU,KAAI,SAACf,GAAD,MAAW,CAClBgB,MAAOhB,EAAKiB,MACZC,MAAOlB,EACPmB,SAAUL,EAAgBd,EAAKmB,eAEnBL,CAAgBF,KAAK9B,MAAMuB,MAE3C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKe,UAAU,QACb,kBAAC,SAAD,CAAQC,cAAeT,KAAKnB,mBAC1B,kBAAC,UAAD,KACE,kBAAC,IAAD,CAAO6B,IAAI,gBAAX,yFACA,kBAAC,UAAD,CAASnB,GAAG,eAAeoB,KAAK,UAChC,kBAAC,IAAD,MACA,kBAAC,IAAD,OA4CF,kBAAC,IAAD,CAAQC,KAAK,SAASC,MAAM,QAA5B,4EAGA,kBAAC,IAAD,CACED,KAAK,SACLE,QAAS,WA1DP,IAACvB,IA2DG,EAAKrB,MAAM6C,IAAIxB,GA3DX,EAAKrB,MAAM8C,WAAWzB,GA4D9B,EAAKrB,MAAM+C,QAAQC,KAAK,MAE1BV,UAAU,OACVK,MAAM,UAPR,qD,GAjHWM,cAwIRC,uBALS,SAAC9C,GAAW,IAAD,EACKA,EAAM+C,SAC5C,MAAO,CAAEC,QAFwB,EACzBA,QACUC,MAFe,EAChBA,MACQR,IAFQ,EACTA,IACMtB,KAFG,EACJA,QAIS,CACtCD,eACAS,kBACAe,gBAHaI,CAIZnD,I,gCC7JH","file":"static/js/23.1fff70e8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Label,\n  FormFeedback,\n  FormText,\n  Container,\n  Row,\n  Button,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getAdsDetails, updatePost, deletePost } from \"../../redux/actions\";\n\nimport { AvForm, AvGroup, AvInput } from \"availity-reactstrap-validation\";\nimport { getLoggedInUser } from \"../../helpers/authUtils\";\nimport { Cascader } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nclass PostForm extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.getAdsDetails(this.props.match.params.id);\n  }\n  constructor(props) {\n    super(props);\n    const user = getLoggedInUser();\n    // console.log(user)\n    this.handleValidSubmit = this.handleValidSubmit.bind(this);\n    this.handleFileDrop = this.handleFileDrop.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.state = {\n      pass_images: [],\n      category: null,\n    };\n  }\n\n  handleFileDrop = (e) => {\n    const pass_images = [...this.state.pass_images, ...e.target.files];\n    this.setState({ pass_images });\n  };\n\n  deleteFile = (i) => {\n    const pass_images = [...this.state.pass_images];\n    pass_images.splice(i, 1);\n    this.setState({ pass_images });\n  };\n\n  // handleValidSubmit = (e, values) => {\n  //   // this.props.createPost({values, images: this.fileInput})\n  //   console.log({ ...values});\n  //   // this.props.history.push('/post-create-success')\n  // };\n\n  handleValidSubmit = (event, values) => {\n    delete values.pass_images;\n    let formData = new FormData();\n    this.state.pass_images.forEach((item) => {\n      formData.append(\"images\", item);\n    });\n    for (const key in values) {\n      formData.append(key, values[key]);\n    }\n    if (this.state.category)\n      formData.append(\"category\", this.state.category.id);\n    this.props.updatePost({ data: formData, id: this.props.match.params.id });\n    // this.props.history.push('/post-create-success')\n  };\n  render() {\n    const convertCatToOpt = (data) =>\n      data.map((item) => ({\n        label: item.title,\n        value: item,\n        children: convertCatToOpt(item.children),\n      }));\n    const options = convertCatToOpt(this.props.data);\n    const del = (id) => this.props.deletePost(id);\n    return (\n      <Container>\n        <Row className=\"mb-5\">\n          <AvForm onValidSubmit={this.handleValidSubmit}>\n            <AvGroup>\n              <Label for=\"exampleEmail\">Название товара</Label>\n              <AvInput id=\"exampleEmail\" name=\"title\" />\n              <FormFeedback></FormFeedback>\n              <FormText></FormText>\n            </AvGroup>\n            {/* <AvGroup>\n              <Label for=\"exampleText\">Описание товара</Label>\n              <AvInput name=\"description\" type=\"textarea\" id=\"exampleText\" />\n            </AvGroup>\n            <AvGroup>\n              <Cascader\n                onChange={(item) => this.setState({ category: item[0] })}>\n                <Button\n                  className=\"mb-3\"\n                  style={{ boxShadow: \"none\" }}>\n                  {this.state.category?.title || \"Category\"}\n                </Button>\n              </Cascader>\n            </AvGroup>\n            <AvGroup>\n              <Label for=\"exampleNumber\">Цена</Label>\n              <AvInput\n                type=\"number\"\n                name=\"price\"\n                id=\"exampleNumber\"\n                placeholder=\"стоимость товара\"\n              />\n            </AvGroup>\n            <AvGroup>\n              <Label for=\"phone_number\">Номер Телефона</Label>\n              <AvInput \n                name=\"phone_number\" \n                type=\"number\" \n                id=\"phone_number\" \n                placeholder=\"Номер телефона\"/>\n            </AvGroup>\n            <AvGroup>\n              <Label for=\"pass_images\">Добавить картинку</Label>\n              <AvInput\n                onChange={this.handleFileDrop}\n                type=\"file\"\n                name=\"pass_images\"\n                id=\"pass_images\"\n                multiple\n              />\n              <FormText color=\"muted\"></FormText>\n            </AvGroup> */}\n            <Button type=\"submit\" color=\"info\">\n              Опубликовать\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={() => {\n                del(this.props.ads.id);\n                this.props.history.push(\"/\");\n              }}\n              className=\"ml-2\"\n              color=\"danger\"\n            >\n              Удалить\n            </Button>\n          </AvForm>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { loading, error, ads, data } = state.Category;\n  return { loading, error, ads, data };\n};\n\nexport default connect(mapStateToProps, {\n  updatePost,\n  getAdsDetails,\n  deletePost,\n})(PostForm);\n","export * from './auth/actions';\nexport * from './category/actions';"],"sourceRoot":""}