{"version":3,"sources":["assets/icons/-1_2_1 1.webp","assets/icons/favorites.svg","assets/icons/userIcon.svg","components/ProfileDropdown/ProfileDropdown.js","components/BurgerMenu/index.js","components/UserDropdownMenu/index.js","components/SearchInput/index.js","components/MetroDropdown/index.js","components/Header/Header.js","redux/actions.js"],"names":["module","exports","ProfileMobile","useState","dropdownOpen","setDropdownOpen","history","useHistory","className","src","Favorites","alt","width","height","style","cursor","Dropdown","isOpen","toggle","prevState","DropdownToggle","tag","IconUser","DropdownMenu","right","DropdownItem","onClick","push","key","fontSize","ProfileDropdown","color","BurgerMenu","props","setOpen","ButtonDropdown","boxShadow","fontWeight","UserDropdownMenu","UserIcon","SearchInput","state","res","handleOnInputChange","e","value","target","setState","prevProps","this","liveSearch","query","onValidSubmit","values","search","qs","stringify","InputGroup","autoComplete","name","placeholder","onChange","InputGroupAddon","addonType","Button","type","outline","display","postTitle","length","map","item","id","liveSearchFailed","title","Component","connect","Category","loading","error","MetroDropdown","metro","modifiers","setMaxHeight","enabled","order","fn","data","styles","overflow","maxHeight","Header","result","getMetro","Container","Row","to","isUserAuthenticated","Col","md","parse","location","replace","xs"],"mappings":"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","file":"static/js/15.e03cea6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/-1_2_1 1.9fef31d0.webp\";","module.exports = __webpack_public_path__ + \"static/media/favorites.9307a00a.svg\";","module.exports = __webpack_public_path__ + \"static/media/userIcon.8406906a.svg\";","import React, { useState } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n// import UncontrolledDropdown from 'reactstrap/lib/UncontrolledDropdown';\nimport { useHistory } from \"react-router-dom\";\n\nimport Row from \"reactstrap/lib/Row\";\nimport IconUser from \"../../assets/icons/-1_2_1 1.webp\";\nimport Favorites from \"../../assets/icons/favorites.svg\";\n\nconst ProfileDropdown = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const history = useHistory();\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n  const logout = () => history.push(\"/account/logout\");\n  return (\n    <>\n      <div className=\"d-none d-lg-flex\">\n        <Row className=\"mr-1\">\n          <div className=\"mt-2 mr-1\">\n            <img\n              className=\"mr-2\"\n              src={Favorites}\n              alt=\"favoritesIcon\"\n              width=\"15rem\"\n              height=\"15rem\"\n              style={{ cursor: \"pointer\" }}\n            />\n          </div>\n          <img\n            onClick={() => history.push(\"/my-profile\")}\n            className=\"rounded-circle d-none d-lg-flex\"\n            src={IconUser}\n            alt=\"profile-icon\"\n            width=\"40rem\"\n            height=\"40rem\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </Row>\n        <Dropdown\n          isOpen={dropdownOpen}\n          toggle={toggle}\n          className=\"d-none d-lg-flex\"\n        >\n          <DropdownToggle tag=\"a\" className=\"nav-link h6\">\n            <span style={{ cursor: \"pointer\", color: \"#808080\" }}>\n              Name user\n            </span>\n          </DropdownToggle>\n          <DropdownMenu className=\"dropdown-menu\" right>\n            <DropdownItem\n              key=\"mb-go-home\"\n              className=\"border-bottom\"\n              onClick={() => history.push(\"/my-profile\")}\n              style={{ fontSize: \".8rem\" }}\n            >\n              Мои объявления\n            </DropdownItem>\n            <DropdownItem\n              key=\"mb-logout\"\n              onClick={logout}\n              style={{ fontSize: \".8rem\" }}\n            >\n              Выход\n            </DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </div>\n      <ProfileMobile />\n    </>\n  );\n};\n\nconst ProfileMobile = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const history = useHistory();\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n  const logout = () => history.push(\"/account/logout\");\n  return (\n    <div className=\"d-flex d-lg-none\">\n      <div className=\"mt-2 mr-1\">\n        <img\n          className=\"mr-2\"\n          src={Favorites}\n          alt=\"favoritesIcon\"\n          width=\"15rem\"\n          height=\"15rem\"\n          style={{ cursor: \"pointer\" }}\n        />\n      </div>\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle tag=\"a\" className=\"nav-link h6 p-0\">\n          <img\n            className=\"rounded-circle\"\n            src={IconUser}\n            alt=\"profile-icon\"\n            width=\"40rem\"\n            height=\"40rem\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </DropdownToggle>\n        <DropdownMenu className=\"dropdown-menu\" right>\n          <DropdownItem\n            onClick={() => history.push(\"/my-profile\")}\n            key=\"md-go-home\"\n            className=\"border-bottom\"\n            style={{ fontSize: \".8rem\" }}\n          >\n            Мои объявления\n          </DropdownItem>\n          <DropdownItem\n            key=\"md-logout\"\n            onClick={logout}\n            style={{ fontSize: \".8rem\" }}\n          >\n            Выйти\n          </DropdownItem>\n        </DropdownMenu>\n      </Dropdown>\n    </div>\n  );\n};\nexport default ProfileDropdown;\n","import React, { useState } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport * as Feather from 'react-feather';\n\nconst BurgerMenu = (props) => {\n  const [dropdownOpen, setOpen] = useState(false);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  return (\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle color=\"white px-0\" style={{boxShadow: 'none'}}>\n        <Feather.Menu color='#4B729F' className=\"mr-2\"/>\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem className=\"mt-3\" style={{fontSize:'.8rem', fontWeight: '200'}}>Объявления</DropdownItem>\n        <DropdownItem style={{fontSize:'.8rem', fontWeight: '200'}}>Реклама на сайте</DropdownItem>\n        <DropdownItem style={{fontSize:'.8rem', fontWeight: '200'}}>Выбрать регион</DropdownItem>\n        <DropdownItem className=\"mb-3\" style={{fontSize:'.8rem', fontWeight: '200'}}>Выбрать метро</DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  );\n}\n\nexport default BurgerMenu;","import React, { useState } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport UserIcon from '../../assets/icons/userIcon.svg';\nimport { useHistory } from 'react-router-dom';\n\n\nconst UserDropdownMenu = (props) => {\n  const [dropdownOpen, setOpen] = useState(false);\n  const history = useHistory()\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  return (\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle color=\"white px-0\" style={{boxShadow: 'none'}}>\n        <img src={UserIcon} alt=\"userIcon\" />\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownItem onClick={()=>history.push('/account/login')} className=\"mt-3\" style={{fontSize:'.8rem', fontWeight: '200'}}>Войти</DropdownItem>\n        <DropdownItem onClick={()=>history.push('/account/register')}  style={{fontSize:'.8rem', fontWeight: '200'}}>Зарегистрироваться</DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  );\n}\n\nexport default UserDropdownMenu;","import React, { Component } from \"react\";\nimport { InputGroup, InputGroupAddon, Button } from \"reactstrap\";\nimport \"./SearchInput.css\";\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\nimport qs from \"qs\";\nimport { liveSearch, liveSearchFailed } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\n\nclass SearchInput extends Component {\n  state = {\n    res: \"\",\n  };\n\n  handleOnInputChange = (e) => {\n    const value = e.target.value;\n    this.setState({ res: value });\n  };\n  componentDidUpdate(prevProps, prevState) {\n    // if (this.state.res === \"\" && this.state.res !== prevState.res) {\n    //   this.props.liveSearchFailed();\n    // }\n    if (this.state.res !== prevState.res) {\n      this.props.liveSearch(this.state.res);\n    }\n  }\n\n  // fetchSearchResult() {\n  // this.props.getSearchResult(this.state.res);\n  // }\n  render() {\n    const { query, history } = this.props;\n\n    const handleValidSubmit = (e, values) => {\n      query.search = values.search;\n      history.push(`/home?${qs.stringify(query)}`);\n    };\n    return (\n      <AvForm onValidSubmit={handleValidSubmit}>\n        <div className=\"live-search-container \">\n          <InputGroup className=\"search-inp rounded-pipi\">\n            <AvInput\n              autoComplete=\"off\"\n              name=\"search\"\n              placeholder=\"Поиск\"\n              value={this.state.res}\n              onChange={this.handleOnInputChange}\n              className=\"search-inp__input\"\n            />\n            <InputGroupAddon addonType=\"prepend\">\n              <Button\n                type=\"submit\"\n                outline\n                color=\"info\"\n                className=\"search-inp__btn\"\n              >\n                Найти\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n          <div className=\"d-flex justify-content-center\">\n            <div\n              className=\"live-search-elems rounded text-left\"\n              style={{ display: this.state.res ? \"block\" : \"none\" }}\n            >\n              {!this.props.postTitle.length && (\n                <div className=\"px-2 mx-2 mt-2\"> Ничего не найдено </div>\n              )}\n              {this.props.postTitle.map((item) => (\n                <div\n                  className=\"live-search-item px-2 mx-2\"\n                  key={item.id}\n                  onClick={() => {\n                    this.props.history.push(\"/product-page/\" + item.id);\n                    this.props.liveSearchFailed();\n                  }}\n                >\n                  {item.title}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </AvForm>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { loading, error, postTitle } = state.Category;\n  return { loading, error, postTitle };\n};\n\nexport default connect(mapStateToProps, { liveSearch, liveSearchFailed })(\n  SearchInput\n);\n","import React, { useState } from \"react\";\nimport {\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Dropdown,\n} from \"reactstrap\";\n\nimport \"./MetroDrop.css\";\n\nconst MetroDropdown = ({ metro }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle tag=\"a\">\n        <span className=\"metro-title\">Выбрать метро</span>\n      </DropdownToggle>\n      <DropdownMenu\n        modifiers={{\n          setMaxHeight: {\n            enabled: true,\n            order: 890,\n            fn: (data) => {\n              return {\n                ...data,\n                styles: {\n                  ...data.styles,\n                  overflow: \"auto\",\n                  maxHeight: \"100px\",\n                },\n              };\n            },\n          },\n        }}\n      >\n        {metro\n          ? metro.map((item) => (\n              <DropdownItem className=\"metro-elems\" key={item.id}>\n                {item.title}\n              </DropdownItem>\n            ))\n          : \"Что то пошло не так\"}\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\n\nexport default MetroDropdown;\n","import React, { Component } from \"react\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\nimport { connect } from \"react-redux\";\n\nimport \"../Header/Header.css\";\nimport { Link } from \"react-router-dom\";\nimport { isUserAuthenticated } from \"../../helpers/authUtils\";\nimport BurgerMenu from \"../BurgerMenu\";\nimport UserDropdown from \"../UserDropdownMenu\";\nimport SearchInput from \"../SearchInput\";\nimport { getMetro } from \"../../redux/actions\";\nimport MetroDrop from \"../MetroDropdown\";\nimport qs from \"qs\";\n\nclass Header extends Component {\n  state = {\n    result: \"\",\n  };\n\n  componentDidMount() {\n    this.props.getMetro();\n  }\n  render() {\n    return (\n      <>\n        <Container className=\"py-3\">\n          <header className=\"Header d-none d-lg-block\">\n            <Row className=\"justify-content-between\">\n              <div className=\"d-flex align-items-center\">\n                <Link to=\"/\" className=\"nav-menu__item\">\n                  Выбрать регион\n                </Link>\n                <MetroDrop metro={this.props.metro} />\n                {/* <Link to=\"/\" className=\"nav-menu__item\">Выбрать метро</Link> */}\n              </div>\n\n              {isUserAuthenticated() ? (\n                <ProfileDropdown />\n              ) : (\n                // <Link className=\"nav-menu__item\" to=\"/account/logout\">Выйти</Link>\n                <div>\n                  <Link to=\"/account/login\" className=\"nav-menu__item\">\n                    Войти\n                  </Link>\n                  <Link to=\"/account/register\" className=\"nav-menu__item\">\n                    Регистрация\n                  </Link>\n                </div>\n              )}\n            </Row>\n\n            <Row className=\"d-flex mt-2\">\n              <Col className=\"logo px-0 col-6 col-lg-2\">\n                <h3>\n                  <Link to=\"/\" className=\"text-info\">\n                    Logo\n                  </Link>\n                </h3>\n              </Col>\n              <Col md=\"7\">\n                <SearchInput\n                  result={this.state.result}\n                  query={qs.parse(\n                    this.props.history.location.search.replace(\"?\", \"\")\n                  )}\n                  history={this.props.history}\n                />\n              </Col>\n              <Link\n                to=\"/announcement\"\n                className=\"col-6 col-lg-3 d-none d-lg-block\"\n              >\n                <Button\n                  color=\"info\"\n                  className=\"nav-bar__adBtn rounded-pipi w-100\"\n                >\n                  Опубликовать Объявление\n                </Button>\n              </Link>\n            </Row>\n          </header>\n\n          {/*-----------Mobile Header-------------*/}\n          <header className=\"Header d-lg-none d-block\">\n            <Row className=\"d-flex mt-2 justify-content-between\">\n              <Col xs={3}>\n                <BurgerMenu />\n              </Col>\n\n              <Col className=\"logo col-5 px-0 d-flex justify-content-center\">\n                <h3>\n                  <Link to=\"/\">Logo</Link>\n                </h3>\n              </Col>\n\n              <Col xs={3} className=\"d-flex justify-content-end\">\n                <div>\n                  {isUserAuthenticated() ? (\n                    <ProfileDropdown />\n                  ) : (\n                    // <Link className=\"nav-menu__item\" to=\"/account/logout\">Выйти</Link>\n                    <div className=\"mb-2\">\n                      <UserDropdown />\n                    </div>\n                  )}\n                </div>\n              </Col>\n\n              <Col xs={12}>\n                <SearchInput\n                  result={this.state.result}\n                  query={qs.parse(\n                    this.props.history.location.search.replace(\"?\", \"\")\n                  )}\n                  history={this.props.history}\n                />\n              </Col>\n            </Row>\n          </header>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { metro, loading, error } = state.Category;\n  return { metro, loading, error };\n};\n\nexport default connect(mapStateToProps, { getMetro })(Header);\n","export * from './auth/actions';\nexport * from './category/actions';"],"sourceRoot":""}