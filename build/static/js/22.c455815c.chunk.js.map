{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/auth/Register.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Register","state","handleValidSubmit","e","values","a","cookie","Cookies","Axios","post","API_URL","data","set","JSON","stringify","token","props","history","push","setState","response","console","log","className","style","minHeight","md","xs","boxShadow","non_field_errors","username","color","onValidSubmit","name","label","type","validate","required","pattern","errorMessage","email","minLength","maxLength","match","Component"],"mappings":"iIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,8NCQMC,E,4MACJC,MAAQ,CACNH,IAAK,M,EAEPI,kB,uCAAoB,WAAOC,EAAGC,GAAV,mBAAAC,EAAA,6DAEZC,EAAS,IAAIC,IAFD,kBAKOC,IAAMC,KAAN,UAClBC,IADkB,iCAErBN,GAPc,gBAKRO,EALQ,EAKRA,KAIRL,EAAOM,IAAI,OAAQC,KAAKC,UAAU,CAAEC,MAAOJ,EAAK5B,OAChD,EAAKiC,MAAMC,QAAQC,KAAK,KAVR,kDAahB,EAAKC,SAAS,CAAErB,IAAK,KAAEsB,WAbP,0D,+GAgBV,IAAD,wBAEP,OADAC,QAAQC,IAAI5B,KAAKO,MAAMH,KAErB,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEyB,UAAU,4CACVC,MAAO,CAAEC,UAAW,SAEpB,kBAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,IACd,kBAAC,IAAD,CACEJ,UAAU,OACVC,MAAO,CAAEI,UAAW,+BAEpB,kBAAC,IAAD,MACG,UAAAlC,KAAKO,aAAL,mBAAYH,WAAZ,mBAAiBa,YAAjB,eAAuBkB,oBACrB,UAAAnC,KAAKO,aAAL,mBAAYH,WAAZ,mBAAiBa,YAAjB,eAAuBmB,WACtB,kBAAC,IAAD,CAAOC,MAAM,WACV,UAAArC,KAAKO,aAAL,mBAAYH,WAAZ,mBAAiBa,YAAjB,eAAuBkB,oBAAvB,UACCnC,KAAKO,aADN,iBACC,EAAYH,WADb,iBACC,EAAiBa,YADlB,aACC,EAAuBmB,WAG/B,kBAAC,SAAD,CAAQE,cAAetC,KAAKQ,mBAC1B,kBAAC,UAAD,CACE+B,KAAK,WACLC,MAAM,yIACNC,KAAK,OACLC,SAAU,CACRC,SAAU,CAAEnD,OAAO,GACnBoD,QAAS,CAAEpD,MAAO,iBAAkBqD,aAAc,OAItD,kBAAC,UAAD,CACEN,KAAK,QACLC,MAAM,sEACNC,KAAK,OACLC,SAAU,CACRC,SAAU,CAAEnD,OAAO,GACnBsD,MAAO,CAAEtD,OAAO,MAIpB,kBAAC,UAAD,CACE+C,KAAK,YACLC,MAAM,oGACNC,KAAK,OAELC,SAAU,CACRC,SAAU,CACRnD,OAAO,EACPqD,aAAc,gJAEhBE,UAAW,CACTvD,MAAO,EACPqD,aACE,uOAEJG,UAAW,CACTxD,MAAO,GACPqD,aACE,+NAKR,kBAAC,UAAD,CACEN,KAAK,YACLE,KAAK,OACLD,MAAM,8FACNK,aAAa,2GACbH,SAAU,CACRC,SAAU,CAAEnD,OAAO,GACnBuD,UAAW,CAAEvD,MAAO,GACpBwD,UAAW,CAAExD,MAAO,IACpByD,MAAO,CAAEzD,MAAO,gBAGpB,kBAAC,IAAD,CAAQqC,UAAU,QAAQQ,MAAM,QAAhC,qH,GAlGGa,aAgHR5C","file":"static/js/22.c455815c.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { Component } from \"react\";\nimport { Container, Row, Card, CardBody, Col, Alert } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Button } from \"reactstrap\";\nimport Axios from \"axios\";\nimport { API_URL } from \"../../helpers/constants\";\nimport { Cookies } from \"react-cookie\";\n\nclass Register extends Component {\n  state = {\n    err: null,\n  };\n  handleValidSubmit = async (e, values) => {\n    // console.log(values)\n    const cookie = new Cookies();\n\n    try {\n      const { data } = await Axios.post(\n        `${API_URL}/auth/rest-auth/registration/`,\n        values\n      );\n      cookie.set(\"user\", JSON.stringify({ token: data.key }));\n      this.props.history.push(\"/\");\n    } catch (e) {\n      // console.warn(\"API_ERR\", e.response.data);\n      this.setState({ err: e.response });\n    }\n  };\n  render() {\n    console.log(this.state.err);\n    return (\n      <div>\n        <Container>\n          <Row\n            className=\"justify-content-center align-items-center\"\n            style={{ minHeight: \"80vh\" }}\n          >\n            <Col md={6} xs={12}>\n              <Card\n                className=\"my-2\"\n                style={{ boxShadow: \"-5px 9px 22px -2px #ddd4d4\" }}\n              >\n                <CardBody>\n                  {this.state?.err?.data?.non_field_errors ||\n                    (this.state?.err?.data?.username && (\n                      <Alert color=\"danger\">\n                        {this.state?.err?.data?.non_field_errors ||\n                          this.state?.err?.data?.username}\n                      </Alert>\n                    ))}\n                  <AvForm onValidSubmit={this.handleValidSubmit}>\n                    <AvField\n                      name=\"username\"\n                      label=\"Введите Имя Пользователя\"\n                      type=\"text\"\n                      validate={{\n                        required: { value: true },\n                        pattern: { value: \"^[A-Za-z0-9]+$\", errorMessage: \"\" },\n                      }}\n                    />\n\n                    <AvField\n                      name=\"email\"\n                      label=\"Введите ваш Email\"\n                      type=\"text\"\n                      validate={{\n                        required: { value: true },\n                        email: { value: true },\n                      }}\n                    />\n\n                    <AvField\n                      name=\"password1\"\n                      label=\"Придумайте пароль\"\n                      type=\"text\"\n                      // validate={{ password: true }}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Пожалуйста введите пароль\",\n                        },\n                        minLength: {\n                          value: 8,\n                          errorMessage:\n                            \"Ваш пароль должен содержать от 8 до 16 символов\",\n                        },\n                        maxLength: {\n                          value: 16,\n                          errorMessage:\n                            \"Ваше пароль должен быть между 8 и 16 символов \",\n                        },\n                      }}\n                    />\n\n                    <AvField\n                      name=\"password2\"\n                      type=\"text\"\n                      label=\"Повторите пароль\"\n                      errorMessage=\"Пароли не совпадают\"\n                      validate={{\n                        required: { value: true },\n                        minLength: { value: 8 },\n                        maxLength: { value: 16 },\n                        match: { value: \"password1\" },\n                      }}\n                    />\n                    <Button className=\"w-100\" color=\"info\">\n                      Зарегистрироватся\n                    </Button>\n                  </AvForm>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n"],"sourceRoot":""}