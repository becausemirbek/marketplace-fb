{"version":3,"sources":["components/CityDrop/index.js","pages/EditPage/index.js","redux/actions.js"],"names":["CityDrop","cityTitle","city","onClick","handleSetMetro","id","useState","dropdownOpen","setDropdownOpen","className","isOpen","toggle","prevState","tag","caret","modifiers","setMaxHeight","enabled","order","fn","data","styles","overflow","maxHeight","map","item","key","title","style","fontSize","PostForm","props","handleFileDrop","e","pass_images","state","target","files","setState","deleteFile","i","splice","handleValidSubmit","event","values","token","getLoggedInUser","val","category","user","updatePost","slug","bind","this","getAdsDetails","match","params","getCategory","getCity","ads","options","convertCatToOpt","label","value","children","onValidSubmit","for","name","description","type","onChange","boxShadow","history","price","placeholder","phoneNumber","display","color","deletePost","push","Component","connect","Category","loading","error"],"mappings":"wMAwDeA,IA/CE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7BC,EAAiB,SAACC,GACtBF,EAAQE,IAFuC,EAITC,oBAAS,GAJA,mBAI1CC,EAJ0C,KAI5BC,EAJ4B,KAMjD,OACE,kBAAC,IAAD,CAAUC,UAAU,OAAOC,OAAQH,EAAcI,OAFpC,kBAAMH,GAAgB,SAACI,GAAD,OAAgBA,OAGjD,kBAAC,IAAD,CAAgBC,IAAI,IAAIC,OAAK,GAC3B,8BAAOb,GAAa,oFAEtB,kBAAC,IAAD,CACEc,UAAW,CACTC,aAAc,CACZC,SAAS,EACTC,MAAO,IACPC,GAAI,SAACC,GACH,OAAO,2BACFA,GADL,IAEEC,OAAO,2BACFD,EAAKC,QADJ,IAEJC,SAAU,OACVC,UAAW,gBAOpBrB,EACCA,EAAKsB,KAAI,SAACC,GAAD,OACP,kBAAC,IAAD,CACEhB,UAAU,aACVN,QAAS,kBAAMC,EAAeqB,EAAKpB,KACnCqB,IAAKD,EAAKpB,IAEToB,EAAKE,UAIV,0BAAMC,MAAO,CAAEC,SAAU,SAAzB,wG,6OC9BJC,E,kDACJ,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAmBRC,eAAiB,SAACC,GAChB,IAAMC,EAAW,sBAAO,EAAKC,MAAMD,aAAlB,YAAkCD,EAAEG,OAAOC,QAC5D,EAAKC,SAAS,CAAEJ,iBAtBC,EAyBnBK,WAAa,SAACC,GACZ,IAAMN,EAAW,YAAO,EAAKC,MAAMD,aACnCA,EAAYO,OAAOD,EAAG,GACtB,EAAKF,SAAS,CAAEJ,iBA5BC,EAqCnBQ,kBAAoB,SAACC,EAAOC,GAAY,IAC/BC,EAASC,cAATD,MACDE,EAAG,2BAAOH,GAAP,IAAeI,SAAU,EAAKb,MAAMa,SAASrB,MAAOzB,KAAM,EAAKiC,MAAMjC,KAAM+C,KAAMJ,IAC1F,EAAKd,MAAMmB,WAAWH,EAAKH,EAAOO,OAtCrBL,cAFI,OAIjB,EAAKJ,kBAAoB,EAAKA,kBAAkBU,KAAvB,gBACzB,EAAKpB,eAAiB,EAAKA,eAAeoB,KAApB,gBACtB,EAAKb,WAAa,EAAKA,WAAWa,KAAhB,gBAClB,EAAKjB,MAAQ,CACXD,YAAa,GACbc,SAAU,KACV9C,KAAM,MAVS,E,gEAejBmD,KAAKtB,MAAMuB,cAAcD,KAAKtB,MAAMwB,MAAMC,OAAOnD,IACjDgD,KAAKtB,MAAM0B,cACXJ,KAAKtB,MAAM2B,Y,+BAyBH,IAAD,WACCC,EAAQN,KAAKtB,MAAb4B,IAOFC,EANkB,SAAlBC,EAAmBzC,GAAD,OACtBA,GAAQA,EAAKI,KAAI,SAACC,GAAD,MAAW,CAC1BqC,MAAOrC,EAAKE,MACZoC,MAAOtC,EACPuC,SAAUH,EAAgBpC,EAAKuC,cAEnBH,CAAgBR,KAAKtB,MAAMX,MAAQiC,KAAKtB,MAAMX,MAE9D,OACE,kBAAC,IAAD,KACGuC,EACD,kBAAC,IAAD,CAAKlD,UAAU,QACb,kBAAC,SAAD,CAAQwD,cAAeZ,KAAKX,mBAC1B,kBAAC,UAAD,KACE,kBAAC,IAAD,CAAOwB,IAAI,gBAAX,yFACA,kBAAC,UAAD,CAASH,MAAOJ,EAAIhC,MAAOtB,GAAG,eAAe8D,KAAK,UAClD,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEF,kBAAC,UAAD,KACE,kBAAC,IAAD,CAAOD,IAAI,eAAX,yFACA,kBAAC,UAAD,CAASH,MAAOJ,EAAIS,YAAaD,KAAK,cAAcE,KAAK,WAAWhE,GAAG,iBAEzE,kBAAC,UAAD,KACE,kBAAC,IAAD,CACEiE,SAAU,SAAC7C,GAAD,OAAU,EAAKa,SAAS,CAAEU,SAAUvB,EAAK,MACnDmC,QAASA,GAET,kBAAC,IAAD,CACEnD,UAAU,OACVmB,MAAO,CAAE2C,UAAW,UACnB,UAAAlB,KAAKlB,MAAMa,gBAAX,eAAqBrB,QAAS,cAIrC,kBAAC,UAAD,KACE,kBAAC,IAAD,CACE1B,UAAWoD,KAAKlB,MAAMjC,KACtBA,KAAI,UAAEmD,KAAKtB,aAAP,aAAE,EAAY7B,KAClBC,QAAS,SAACE,GAAD,aAAQ,EAAKiC,SAAS,CAACpC,KAAI,UAAE,EAAK6B,MAAM7B,YAAb,aAAE,EAAkBG,GAAIsB,SAC5D6C,QAASnB,KAAKtB,MAAMyC,WAGxB,kBAAC,UAAD,KACE,kBAAC,IAAD,CAAON,IAAI,iBAAX,4BACA,kBAAC,UAAD,CACEH,MAAOJ,EAAIc,MACXJ,KAAK,SACLF,KAAK,QACL9D,GAAG,gBACHqE,YAAY,iGAGhB,kBAAC,UAAD,KACE,kBAAC,IAAD,CAAOR,IAAI,eAAX,mFACA,kBAAC,UAAD,CACEH,MAAOJ,EAAIgB,YACXR,KAAK,cACLE,KAAK,SACLhE,GAAG,eACHqE,YAAY,qFAEhB,kBAAC,UAAD,CAAS9C,MAAO,CAACgD,QAAS,SACxB,kBAAC,IAAD,CAAOV,IAAI,QAAX,mFACA,kBAAC,UAAD,CACEH,MAAOJ,EAAIR,KACXgB,KAAK,OACLE,KAAK,OACLhE,GAAG,UAcP,kBAAC,IAAD,CAAQgE,KAAK,SAASQ,MAAM,QAA5B,4EAGA,kBAAC,IAAD,CACER,KAAK,SACLlE,QAAS,WAhFP,IAACE,IAiFG,EAAK0B,MAAM4B,IAAIR,KAjFX,EAAKpB,MAAM+C,WAAWzE,GAkF9B,EAAK0B,MAAMyC,QAAQO,KAAK,MAE1BtE,UAAU,OACVoE,MAAM,UAPR,gDAYK,kBAAC,IAAD,W,GA9IMG,aA0JRC,uBALS,SAAC9C,GAAW,IAAD,EACWA,EAAM+C,SAClD,MAAO,CAAEC,QAFwB,EACzBA,QACUC,MAFe,EAChBA,MACQzB,IAFQ,EACTA,IACMvC,KAFG,EACJA,KACOlB,KAFH,EACEA,QAIG,CACtCgD,eACAI,kBACAwB,eACArB,gBACAC,aALauB,CAMZnD,I,gCCnLH","file":"static/js/22.f82398be.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n\nconst CityDrop = ({ cityTitle, city, onClick }) => {\n  const handleSetMetro = (id) => {\n    onClick(id);\n  };\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n  return (\n    <Dropdown className=\"mb-3\" isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle tag=\"a\" caret>\n        <span>{cityTitle || \"Выберите город\"}</span>\n      </DropdownToggle>\n      <DropdownMenu\n        modifiers={{\n          setMaxHeight: {\n            enabled: true,\n            order: 890,\n            fn: (data) => {\n              return {\n                ...data,\n                styles: {\n                  ...data.styles,\n                  overflow: \"auto\",\n                  maxHeight: \"100px\",\n                },\n              };\n            },\n          },\n        }}\n      >\n        {city ? (\n          city.map((item) => (\n            <DropdownItem\n              className=\"metro-item\"\n              onClick={() => handleSetMetro(item.id)}\n              key={item.id}\n            >\n              {item.title}\n            </DropdownItem>\n          ))\n        ) : (\n          <span style={{ fontSize: \"15px\" }}>\"Что то пошло не так\"</span>\n        )}\n      </DropdownMenu>\n    </Dropdown>\n  );\n};\n\nexport default CityDrop;\n","import React, { Component } from \"react\";\nimport {\n  Label,\n  FormFeedback,\n  FormText,\n  Container,\n  Row,\n  Button,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getAdsDetails, updatePost, deletePost, getCategory, getCity } from \"../../redux/actions\";\n\nimport { AvForm, AvGroup, AvInput } from \"availity-reactstrap-validation\";\nimport { getLoggedInUser } from \"../../helpers/authUtils\";\nimport { Cascader } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Loading from \"../../components/Loading\";\nimport CityDropdown from \"../../components/CityDrop\";\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    const user = getLoggedInUser();\n    // console.log(user)\n    this.handleValidSubmit = this.handleValidSubmit.bind(this);\n    this.handleFileDrop = this.handleFileDrop.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.state = {\n      pass_images: [],\n      category: null,\n      city: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAdsDetails(this.props.match.params.id);\n    this.props.getCategory();\n    this.props.getCity()\n  }\n\n  handleFileDrop = (e) => {\n    const pass_images = [...this.state.pass_images, ...e.target.files];\n    this.setState({ pass_images });\n  };\n\n  deleteFile = (i) => {\n    const pass_images = [...this.state.pass_images];\n    pass_images.splice(i, 1);\n    this.setState({ pass_images });\n  };\n\n  // handleValidSubmit = (e, values) => {\n  //   // this.props.createPost({values, images: this.fileInput})\n  //   console.log({ ...values});\n  //   // this.props.history.push('/post-create-success')\n  // };\n\n  handleValidSubmit = (event, values) => {\n    const {token} = getLoggedInUser()\n    const val = {...values, category: this.state.category.title, city: this.state.city, user: token }\n    this.props.updatePost(val, values.slug);\n  };\n  render() {\n    const { ads } = this.props\n    const convertCatToOpt = (data) =>\n      data && data.map((item) => ({\n        label: item.title,\n        value: item,\n        children: convertCatToOpt(item.children),\n      }));\n    const options = convertCatToOpt(this.props.data && this.props.data);\n    const del = (id) => this.props.deletePost(id);\n    return (\n      <Container>\n        {ads ?\n        <Row className=\"mb-5\">\n          <AvForm onValidSubmit={this.handleValidSubmit}>\n            <AvGroup>\n              <Label for=\"exampleEmail\">Название товара</Label>\n              <AvInput value={ads.title} id=\"exampleEmail\" name=\"title\" />\n              <FormFeedback></FormFeedback>\n              <FormText></FormText>\n            </AvGroup>\n            <AvGroup>\n              <Label for=\"exampleText\">Описание товара</Label>\n              <AvInput value={ads.description} name=\"description\" type=\"textarea\" id=\"exampleText\" />\n            </AvGroup>\n            <AvGroup>\n              <Cascader\n                onChange={(item) => this.setState({ category: item[0] })}\n                options={options}\n                >\n                <Button\n                  className=\"mb-3\"\n                  style={{ boxShadow: \"none\" }}>\n                  {this.state.category?.title || \"Category\"}\n                </Button>\n              </Cascader>\n            </AvGroup>\n            <AvGroup>\n              <CityDropdown\n                cityTitle={this.state.city}\n                city={this.props?.city}\n                onClick={(id) => this.setState({city: this.props.city?.[id].title})}\n                history={this.props.history}\n              />\n            </AvGroup>\n            <AvGroup>\n              <Label for=\"exampleNumber\">Цена</Label>\n              <AvInput\n                value={ads.price}\n                type=\"number\"\n                name=\"price\"\n                id=\"exampleNumber\"\n                placeholder=\"стоимость товара\"\n              />\n            </AvGroup>\n            <AvGroup>\n              <Label for=\"phoneNumber\">Номер Телефона</Label>\n              <AvInput \n                value={ads.phoneNumber}\n                name=\"phoneNumber\" \n                type=\"number\" \n                id=\"phone_number\" \n                placeholder=\"Номер телефона\"/>\n            </AvGroup>\n            <AvGroup style={{display: \"none\"}}>\n              <Label for=\"slug\">Номер Телефона</Label>\n              <AvInput \n                value={ads.slug}\n                name=\"slug\" \n                type=\"text\" \n                id=\"slug\" \n                />\n            </AvGroup>\n            {/* <AvGroup>\n              {/* <Label for=\"pass_images\">Добавить картинку</Label>\n              <AvInput\n                onChange={this.handleFileDrop}\n                type=\"file\"\n                name=\"pass_images\"\n                id=\"pass_images\"\n                multiple\n              /> */}\n              {/* <FormText color=\"muted\"></FormText>\n            </AvGroup> */}\n            <Button type=\"submit\" color=\"info\">\n              Опубликовать\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={() => {\n                del(this.props.ads.slug);\n                this.props.history.push(\"/\");\n              }}\n              className=\"ml-2\"\n              color=\"danger\"\n            >\n              Удалить\n            </Button>\n          </AvForm>\n        </Row> : <Loading />\n        }\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { loading, error, ads, data, city } = state.Category;\n  return { loading, error, ads, data, city };\n};\n\nexport default connect(mapStateToProps, {\n  updatePost,\n  getAdsDetails,\n  deletePost,\n  getCategory,\n  getCity\n})(PostForm);\n","export * from './auth/actions';\nexport * from './category/actions';"],"sourceRoot":""}